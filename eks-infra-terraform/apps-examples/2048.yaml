apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-2048-tls
  namespace: default
  labels:
    app: docker-2048-tls
spec:
  replicas: 2
  selector:
    matchLabels:
      app: docker-2048-tls
  template:
    metadata:
      labels:
        app: docker-2048-tls
    spec:
      containers:
      - name: docker-2048-tls
        image: alexwhen/docker-2048
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: docker-2048-tls-svc
  namespace: default
spec:
  type: ClusterIP
  selector:
    app: docker-2048-tls
  ports:
  - port: 80
    targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: docker-2048-tls-ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/group.name: deifops
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    external-dns.alpha.kubernetes.io/hostname: docker-2048.deifops.click
    # cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  ingressClassName: alb
  rules:
  - host: docker-2048.deifops.click
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: docker-2048-tls-svc
            port:
              number: 80
---
# Uncomment this section if you're ready to enable TLS with cert-manager
# apiVersion: cert-manager.io/v1
# kind: ClusterIssuer
# metadata:
#   name: letsencrypt-prod
# spec:
#   acme:
#     email: mohamed.aboudeif@outlook.com
#     server: https://acme-v02.api.letsencrypt.org/directory
#     privateKeySecretRef:
#       name: letsencrypt-prod
#     solvers:
#     - http01:
#         ingress:
#           class: alb